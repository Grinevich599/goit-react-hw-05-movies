{"version":3,"file":"static/js/145.d99f3597.chunk.js","mappings":"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","sources":["components/PopularMovies/PopularMoviesItem.jsx","components/PopularMovies/MoviesList.jsx","components/SearchMovieForm/SearchMovieForm.jsx","pages/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  StyledIMG,\n  StyledLi,\n  StyledLinkPopular,\n  StyledRaitingSpan,\n  StyledTextRaiting,\n  StyledTitle3,\n} from 'styled';\n\nexport const PopularMoviesItem = ({ id, name, title, popularity, image }) => {\n  const location = useLocation();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <StyledLi>\n      <StyledLinkPopular state={{ from: location }} to={`/movies/${id}`}>\n        <StyledIMG\n          src={\n            image ? `https://image.tmdb.org/t/p/original${image}` : defaultImg\n          }\n          alt={title}\n        />\n        <StyledTitle3>{name ?? title}</StyledTitle3>\n        <StyledTextRaiting>\n          rating:<StyledRaitingSpan>{popularity.toFixed(1)}</StyledRaitingSpan>\n        </StyledTextRaiting>\n      </StyledLinkPopular>\n    </StyledLi>\n  );\n};\n","import React from 'react';\nimport { PopularMoviesItem } from './PopularMoviesItem';\nimport { StyledUl } from 'styled';\n\nexport const MoviesList = ({ MoviesData }) => {\n  return (\n    <StyledUl>\n      {MoviesData.map(({ id, name, title, popularity, poster_path }) => (\n        <PopularMoviesItem\n          key={id}\n          id={id}\n          name={name}\n          title={title}\n          popularity={popularity}\n          image={poster_path}\n        />\n      ))}\n    </StyledUl>\n  );\n};\n","import React, { useState } from 'react';\nimport { StyledFormButton, StyledFormDiv, StyledFormInput } from 'styled';\n\nexport const SearchMovieForm = ({ handleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => {\n    e.preventDefault();\n    const search = e.currentTarget.elements.searchInput.value;\n    setQuery(search);\n    handleSubmit(search);\n  };\n\n  return (\n    <StyledFormDiv>\n      <form onSubmit={handleInput}>\n        <StyledFormInput\n          type=\"text\"\n          name=\"searchInput\"\n          placeholder=\"Enter the name of the movie\"\n          defaultValue={query}\n          required\n        />\n        <StyledFormButton type=\"submit\">Search</StyledFormButton>\n      </form>\n    </StyledFormDiv>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/PopularMovies/MoviesList';\nimport { SearchMovieForm } from 'components/SearchMovieForm/SearchMovieForm';\nimport Notiflix from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { requestMoviesByQuery } from 'services/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [moviesQuery, setMoviesQuery] = useState(null);\n  const query = searchParams.get('film') || '';\n\n  useEffect(() => {\n    if (query === null) return;\n    const fetchMovieByQuery = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await requestMoviesByQuery(query);\n        setMoviesQuery(results);\n      } catch (error) {\n        Notiflix.Notify.warning(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieByQuery();\n  }, [query]);\n\n  const handleSubmit = search => {\n    setSearchParams({\n      film: search,\n    });\n  };\n  return (\n    <div>\n      <SearchMovieForm handleSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {moviesQuery !== null && moviesQuery.length > 0 && (\n        <MoviesList MoviesData={moviesQuery} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["PopularMoviesItem","_ref","id","name","title","popularity","image","location","useLocation","_jsx","StyledLi","children","_jsxs","StyledLinkPopular","state","from","to","concat","StyledIMG","src","alt","StyledTitle3","StyledTextRaiting","StyledRaitingSpan","toFixed","MoviesList","MoviesData","StyledUl","map","_ref2","poster_path","SearchMovieForm","handleSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","StyledFormDiv","onSubmit","e","preventDefault","search","currentTarget","elements","searchInput","value","StyledFormInput","type","placeholder","defaultValue","required","StyledFormButton","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","isLoading","setIsLoading","_useState3","_useState4","moviesQuery","setMoviesQuery","get","useEffect","fetchMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$requestMoviesB","results","_context","prev","next","requestMoviesByQuery","sent","t0","Notiflix","message","finish","stop","apply","arguments","film","Loader","length"],"sourceRoot":""}